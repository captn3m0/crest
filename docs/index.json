{"repository_name":"github.com/mamantoha/crest","body":"![Crest Logo](https://raw.github.com/mamantoha/crest/master/crest.png)\n\n[![Build Status](http://img.shields.io/travis/mamantoha/crest.svg?style=flat)](https://travis-ci.org/mamantoha/crest)\n[![GitHub release](https://img.shields.io/github/release/mamantoha/crest.svg)](https://github.com/mamantoha/crest/releases)\n[![Dependency Status](https://shards.rocks/badge/github/mamantoha/crest/status.svg)](https://shards.rocks/github/mamantoha/crest)\n[![devDependency Status](https://shards.rocks/badge/github/mamantoha/crest/dev_status.svg)](https://shards.rocks/github/mamantoha/crest)\n[![License](https://img.shields.io/github/license/mamantoha/crest.svg)](https://github.com/mamantoha/crest/blob/master/LICENSE)\n\nSimple HTTP and REST client for Crystal, inspired by the Ruby's RestClient gem.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crest:\n    github: mamantoha/crest\n```\n\n## Usage\n\n```crystal\nrequire \"crest\"\n```\n\nBasic usage:\n\n```crystal\nCrest.get(\"http://example.com/resource\", params: {:lang => \"ua\"})\nCrest.post(\"http://example.com/resource\", payload: {:params1 => \"one\", :nested => {:params2 => \"two\"}})\n```\n\n### Passing advanced options\n\n`Crest::Request` accept next parameters:\n\nMandatory parameters:\n\n* `:method` - HTTP method (`:get`. `:post`, `:put`, `:patch`,  `:delete`)\n* `:url` - URL (e.g.: \"http://httpbin.org/ip\")\n\nOptional parameters:\n\n* `:payload` -  a hash containing query params\n* `:headers` -  a hash containing the request headers\n* `:cookies` -  a hash containing the request cookies\n* `:params` -  a hash that represent query-string separated from the preceding part by a question mark (`?`) a sequence of attributeâ€“value pairs separated by a delimiter (`&`)\n* `:user` and `:password` -  for Basic Authentication\n* `:p_addr`, `:p_port`, `:p_user`, and `:p_pass` - specify a per-request proxy by passing these parameters\n* `:max_redirects` -  maximum number of redirections (default to 10)\n* `:logging` -  enable logging (default to `false`)\n* `:logger` -  set logger (default to `Crest::CommonLogger`)\n\nMore detailed examples:\n\n```crystal\nCrest::Request.new(:get, \"http://example.com/resource\", headers: {\"Content-Type\" => \"application/json\"})\nCrest::Request.new(:delete, \"http://example.com/resource/1\", params: {:lang => \"ua\"})\nCrest::Request.new(:post, \"http://example.com/resource\", headers: {\"Content-Type\" => \"application/json\"}, payload: {:foo => \"bar\"})\nCrest::Request.new(:patch, \"http://example.com/resource/1\", headers: {\"Content-Type\" => \"application/json\"}, payload: {:foo => \"bar\"})\nCrest::Request.new(:get, \"http://example.com/resource\", user: \"admin\", password: \"1234\")\n```\n\n### Multipart\n\nYeah, that's right! This does multipart sends for you!\n\n```crystal\nfile = File.open(\"#{__DIR__}/example.png\")\nCrest.post(\"http://example.com/upload\", payload: {:image => file})\n```\n\n### JSON payload\n\n`crest` does not speak JSON natively, so serialize your payload to a string before passing it to `crest`.\n\n```crystal\nCrest.post(\"http://example.com/\", headers: {\"Content-Type\" => \"application/json\"}, payload: {:foo => \"bar\"}.to_json)\n```\n\n### Headers\n\nRequest headers can be set by passing a hash containing keys and values representing header names and values:\n\n```crystal\nresponse = Crest.get(\"http://httpbin.org/headers\", headers: {\"Authorization\" => \"Bearer cT0febFoD5lxAlNAXHo6g\"})\nresponse.headers\n# => {\"Authorization\" => [\"Bearer cT0febFoD5lxAlNAXHo6g\"]}\n```\n\n### Cookies\n\n`Request` and `Response` objects know about HTTP cookies, and will automatically extract and set headers for them as needed:\n\n```crystal\nresponse = Crest.get(\"http://httpbin.org/cookies/set\", params: {\"k1\" => \"v1\", \"k2\" => \"v2\"})\nresponse.cookies\n# => {\"k1\" => \"v1\", \"k2\" => \"v2\"}\n\nresponse = Crest.get(\"http://httpbin.org/cookies\", cookies: {\"k1\" => \"v1\"})\nresponse.cookies\n# => {\"k1\" => \"v1\"}\n```\n\n### Basic authentication\n\nFor basic access authentication for an HTTP user agent you should to provide a user name and password when making a request.\n\n```crystal\nCrest.get(\"http://httpbin.org/basic-auth/user/passwd\", user: \"user\", password: \"passwd\")\n```\n\n### Proxy\n\nIf you need to use a proxy, you can configure individual requests with the proxy host and port arguments to any request method:\n\n```crystal\nCrest.get(\"http://httpbin.org/ip\", p_addr: \"localhost\", p_port: 3128)\n```\n\nTo use HTTP Basic Auth with your proxy, use next syntax:\n\n```crystal\nCrest.get(\"http://httpbin.org/ip\", p_addr: \"localhost\", p_port: 3128, p_user: \"user\", p_pass: \"qwerty\")\n```\n\n### Logging\n\nBy default, the `Crest` does not enable logging. You can enable it per request by setting `logging: true`:\n\n```crystal\nCrest.get(\"http://example.com/resource\", logging: true)\n```\n\nYou can create the custom logger by integration `Crest::Logger` abstract class.\nHere has two methods must be implement: `Crest::Logger.request` and `Crest::Logger.response`.\n\n```crystal\nclass MyLogger < Crest::Logger\n  def request(request)\n    @logger.info \">> | %s | %s\" % [request.method, request.url]\n  end\n\n  def response(response)\n    @logger.info \"<< | %s | %s\" % [response.status_code, response.url]\n  end\nend\n\nCrest.get(\"http://example.com/resource\", logging: true, logger: MyLogger.new)\n```\n\n### Resource\n\n```crystal\nresource = Crest::Resource.new(\"http://localhost\", headers: {\"Content-Type\" => \"application/json\"})\nresource.get({\"X-Something\" => \"1\"})\n```\n\n### Resource Nesting\n\n```crystal\nsite = Crest::Resource.new('http://example.com')\nresponse = site[\"/api/article\"].post({:title => \"Hello world\", :body => \"Crystal is awesome!\"})\n```\n\n### Exceptions\n\n- for result codes between `200` and `207`, a `Crest::Response` will be returned\n- for result codes `301`, `302`, `303` or `307`, the redirection will be followed and the request transformed into a `GET`\n- for other cases, a `Crest::RequestFailed` holding the Response will be raised\n- call `.response` on the exception to get the server's response\n\n### Redirection\n\nBy default, `crest` will follow HTTP 30x redirection requests.\n\nTo disable automatic redirection, set `:max_redirects => 0`.\n\n```crystal\nCrest::Request.execute(method: :get, url: \"http://httpbin.org/redirect/1\", max_redirects: 0)\n# Crest::RequestFailed: 302 Found\n```\n\n## Result handling\n\nThe result of a `Crest::Request` is a `Crest::Response` object.\n\nResponse objects have several useful methods.\n\n- `Response#body`: The response body as a string\n- `Response#status_code`: The HTTP response code\n- `Response#headers`: A hash of HTTP response headers\n- `Response#cookies`: A hash of HTTP cookies set by the server\n- `Response#request`: The `Crest::Request` object used to make the request\n- `Response#http_client_res`: The `HTTP::Client::Response` object\n- `Response#history`: A list of each response received in a redirection chain\n\n## Development\n\nInstall dependencies:\n\n```\nshards\n```\n\nTo run test:\n\n```\nmake test\n```\n\n### Workbook\n\n```\ncrystal play\nopen http://localhost:8080\n```\n\nThen select the Workbook -> Requests from the menu.\n\n## Contributing\n\n1. Fork it ( https://github.com/mamantoha/crest/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [mamantoha](https://github.com/mamantoha) Anton Maminov - creator, maintainer\n\n## License\n\nCopyright: 2017-2018 Anton Maminov (anton.maminov@gmail.com)\n\nThis library is distributed under the MIT license. Please see the LICENSE file.\n","program":{"html_id":"github.com/mamantoha/crest/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/mamantoha/crest","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mamantoha/crest/Crest","path":"Crest.html","kind":"module","full_name":"Crest","name":"Crest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest/exceptions.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr"},{"filename":"crest/logger.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr"},{"filename":"crest/loggers/common_logger.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/loggers/common_logger.cr"},{"filename":"crest/payload.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr"},{"filename":"crest/request.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr"},{"filename":"crest/resource.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr"},{"filename":"crest/response.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr"},{"filename":"crest/utils.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr"},{"filename":"crest/version.cr","line_number":1,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/version.cr"},{"filename":"crest.cr","line_number":7,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"STATUSES","value":"{100 => \"Continue\", 101 => \"Switching Protocols\", 102 => \"Processing\", 200 => \"OK\", 201 => \"Created\", 202 => \"Accepted\", 203 => \"Non-Authoritative Information\", 204 => \"No Content\", 205 => \"Reset Content\", 206 => \"Partial Content\", 207 => \"Multi-Status\", 208 => \"Already Reported\", 226 => \"IM Used\", 300 => \"Multiple Choices\", 301 => \"Moved Permanently\", 302 => \"Found\", 303 => \"See Other\", 304 => \"Not Modified\", 305 => \"Use Proxy\", 306 => \"Switch Proxy\", 307 => \"Temporary Redirect\", 308 => \"Permanent Redirect\", 400 => \"Bad Request\", 401 => \"Unauthorized\", 402 => \"Payment Required\", 403 => \"Forbidden\", 404 => \"Not Found\", 405 => \"Method Not Allowed\", 406 => \"Not Acceptable\", 407 => \"Proxy Authentication Required\", 408 => \"Request Timeout\", 409 => \"Conflict\", 410 => \"Gone\", 411 => \"Length Required\", 412 => \"Precondition Failed\", 413 => \"Payload Too Large\", 414 => \"URI Too Long\", 415 => \"Unsupported Media Type\", 416 => \"Range Not Satisfiable\", 417 => \"Expectation Failed\", 418 => \"I\\\"m A Teapot\", 421 => \"Too Many Connections From This IP\", 422 => \"Unprocessable Entity\", 423 => \"Locked\", 424 => \"Failed Dependency\", 425 => \"Unordered Collection\", 426 => \"Upgrade Required\", 428 => \"Precondition Required\", 429 => \"Too Many Requests\", 431 => \"Request Header Fields Too Large\", 449 => \"Retry With\", 450 => \"Blocked By Windows Parental Controls\", 500 => \"Internal Server Error\", 501 => \"Not Implemented\", 502 => \"Bad Gateway\", 503 => \"Service Unavailable\", 504 => \"Gateway Timeout\", 505 => \"HTTP Version Not Supported\", 506 => \"Variant Also Negotiates\", 507 => \"Insufficient Storage\", 508 => \"Loop Detected\", 509 => \"Bandwidth Limit Exceeded\", 510 => \"Not Extended\", 511 => \"Network Authentication Required\"}","doc":"Hash of HTTP status code => message.\n\n1xx: Informational - Request received, continuing process\n2xx: Success - The action was successfully received, understood, and\n     accepted\n3xx: Redirection - Further action must be taken in order to complete the\n     request\n4xx: Client Error - The request contains bad syntax or cannot be fulfilled\n5xx: Server Error - The server failed to fulfill an apparently valid\n     request\n\nSee http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\n","summary":"<p>Hash of HTTP status code => message.</p>"},{"name":"VERSION","value":"\"0.9.6\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"delete(url:String,**args)-class-method","html_id":"delete(url:String,**args)-class-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Request.execute(:delete, url, **args)"}},{"id":"get(url:String,**args)-class-method","html_id":"get(url:String,**args)-class-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Request.execute(:get, url, **args)"}},{"id":"patch(url:String,**args)-class-method","html_id":"patch(url:String,**args)-class-method","name":"patch","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Request.execute(:patch, url, **args)"}},{"id":"post(url:String,**args)-class-method","html_id":"post(url:String,**args)-class-method","name":"post","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Request.execute(:post, url, **args)"}},{"id":"put(url:String,**args)-class-method","html_id":"put(url:String,**args)-class-method","name":"put","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr#L10","def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Request.execute(:put, url, **args)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mamantoha/crest/Crest/CommonLogger","path":"Crest/CommonLogger.html","kind":"class","full_name":"Crest::CommonLogger","name":"CommonLogger","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Crest/Logger","kind":"class","full_name":"Crest::Logger","name":"Logger"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Crest/Logger","kind":"class","full_name":"Crest::Logger","name":"Logger"},{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/loggers/common_logger.cr","line_number":4,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/loggers/common_logger.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"request(request)-instance-method","html_id":"request(request)-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"args_string":"(request)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/loggers/common_logger.cr#L5","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/loggers/common_logger.cr#L5","def":{"name":"request","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = String.build do |io|\n  (io << \"| \") << (colorful_method(request.method))\n  (io << \" | \") << request.url\n  if request.payload.nil?\n  else\n    (io << \" | \") << request.payload.to_s.inspect\n  end\nend.to_s\n@logger.info(message)\n"}},{"id":"response(response)-instance-method","html_id":"response(response)-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"args_string":"(response)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/loggers/common_logger.cr#L15","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/loggers/common_logger.cr#L15","def":{"name":"response","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message = String.build do |io|\n  (io << \"| \") << (colorful_status_code(response.status_code))\n  (io << \" | \") << response.url\n  (io << \" | \") << response.body.inspect\nend.to_s\n@logger.info(message)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Exception","path":"Crest/Exception.html","kind":"class","full_name":"Crest::Exception","name":"Exception","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/exceptions.cr","line_number":91,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/mamantoha/crest/Crest/RequestFailed","kind":"class","full_name":"Crest::RequestFailed","name":"RequestFailed"}],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"This is the base Crest exception class. Rescue it if you want to\ncatch any exception that your request might raise\nYou can get the status code by e.http_code, or see anything about the\nresponse via e.response.\nFor example, the entire result body (which is\nprobably an HTML error page) is e.response.","summary":"<p>This is the base Crest exception class.</p>","class_methods":[],"constructors":[{"id":"new(response,initial_response_code=nil)-class-method","html_id":"new(response,initial_response_code=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""},{"name":"initial_response_code","doc":null,"default_value":"nil","external_name":"initial_response_code","restriction":""}],"args_string":"(response, initial_response_code = <span class=\"n\">nil</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L99","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L99","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""},{"name":"initial_response_code","doc":null,"default_value":"nil","external_name":"initial_response_code","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response, initial_response_code)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_message-instance-method","html_id":"default_message-instance-method","name":"default_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L129","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L129","def":{"name":"default_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.name"}},{"id":"http_body-instance-method","html_id":"http_body-instance-method","name":"http_body","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L117","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L117","def":{"name":"http_body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @response\n  @response.body\nend"}},{"id":"http_code-instance-method","html_id":"http_code-instance-method","name":"http_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L105","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L105","def":{"name":"http_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @response\n  @response.status_code.to_i\nelse\n  @initial_response_code\nend"}},{"id":"http_headers-instance-method","html_id":"http_headers-instance-method","name":"http_headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L113","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L113","def":{"name":"http_headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @response\n  @response.headers\nend"}},{"id":"message-instance-method","html_id":"message-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L125","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L125","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@message || default_message"}},{"id":"original_exception=(original_exception)-instance-method","html_id":"original_exception=(original_exception)-instance-method","name":"original_exception=","doc":null,"summary":null,"abstract":false,"args":[{"name":"original_exception","doc":null,"default_value":"","external_name":"original_exception","restriction":""}],"args_string":"(original_exception)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L93","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L93","def":{"name":"original_exception=","args":[{"name":"original_exception","doc":null,"default_value":"","external_name":"original_exception","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@original_exception = original_exception"}},{"id":"original_excetion-instance-method","html_id":"original_excetion-instance-method","name":"original_excetion","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L92","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L92","def":{"name":"original_excetion","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@original_excetion"}},{"id":"response:Crest::Response-instance-method","html_id":"response:Crest::Response-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L92","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L92","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response"}},{"id":"response=(response)-instance-method","html_id":"response=(response)-instance-method","name":"response=","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"args_string":"(response)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L93","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L93","def":{"name":"response=","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response = response"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L121","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L121","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Logger","path":"Crest/Logger.html","kind":"class","full_name":"Crest::Logger","name":"Logger","abstract":true,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/logger.cr","line_number":4,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/mamantoha/crest/Crest/CommonLogger","kind":"class","full_name":"Crest::CommonLogger","name":"CommonLogger"}],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(filename:String)-class-method","html_id":"new(filename:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L5","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L5","def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(File.open(filename, \"w\"))"}},{"id":"new(io:IO=STDOUT)-class-method","html_id":"new(io:IO=STDOUT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"args_string":"(io : IO = <span class=\"t\">STDOUT</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L11","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L11","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_formatter-instance-method","html_id":"default_formatter-instance-method","name":"default_formatter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L21","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L21","def":{"name":"default_formatter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Logger::Formatter.new do |severity, datetime, progname, message, io|\n  io << progname\n  (io << \" | \") << (datetime.to_s(\"%F %T\"))\n  (io << \" \") << message\nend"}},{"id":"request(request:Crest::Request):String-instance-method","html_id":"request(request:Crest::Request):String-instance-method","name":"request","doc":null,"summary":null,"abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request) : String","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L18","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L18","def":{"name":"request","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"response(response:Crest::Response):String-instance-method","html_id":"response(response:Crest::Response):String-instance-method","name":"response","doc":null,"summary":null,"abstract":true,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"args_string":"(response : Crest::Response) : String","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L19","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L19","def":{"name":"response","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/logger.cr#L9","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @logger.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Payload","path":"Crest/Payload.html","kind":"module","full_name":"Crest::Payload","name":"Payload","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest/payload.cr","line_number":2,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[{"id":"add_field(formdata:HTTP::FormData::Builder,name:String|Symbol,value:File)-class-method","html_id":"add_field(formdata:HTTP::FormData::Builder,name:String|Symbol,value:File)-class-method","name":"add_field","doc":null,"summary":null,"abstract":false,"args":[{"name":"formdata","doc":null,"default_value":"","external_name":"formdata","restriction":"HTTP::FormData::Builder"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"File"}],"args_string":"(formdata : HTTP::FormData::Builder, name : String | Symbol, value : File)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L26","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L26","def":{"name":"add_field","args":[{"name":"formdata","doc":null,"default_value":"","external_name":"formdata","restriction":"HTTP::FormData::Builder"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"File"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"metadata = HTTP::FormData::FileMetadata.new(filename: value.path)\nformdata.file(name.to_s, value, metadata)\n"}},{"id":"add_field(formdata:HTTP::FormData::Builder,name:String|Symbol,value:TextValue)-class-method","html_id":"add_field(formdata:HTTP::FormData::Builder,name:String|Symbol,value:TextValue)-class-method","name":"add_field","doc":null,"summary":null,"abstract":false,"args":[{"name":"formdata","doc":null,"default_value":"","external_name":"formdata","restriction":"HTTP::FormData::Builder"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"TextValue"}],"args_string":"(formdata : HTTP::FormData::Builder, name : String | Symbol, value : TextValue)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L22","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L22","def":{"name":"add_field","args":[{"name":"formdata","doc":null,"default_value":"","external_name":"formdata","restriction":"HTTP::FormData::Builder"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String | Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"TextValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"formdata.field(name.to_s, value.to_s)"}},{"id":"generate(params:Hash)-class-method","html_id":"generate(params:Hash)-class-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"args_string":"(params : Hash)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L3","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L3","def":{"name":"generate","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"content_type = Channel(String).new(1)\nio = IO::Memory.new\nparsed_params = parse_params(params)\nHTTP::FormData.build(io) do |formdata|\n  content_type.send(formdata.content_type)\n  parsed_params.each do |name, value|\n    add_field(formdata, name.to_s, value)\n  end\nend\nreturn {io.to_s, content_type.receive}\n"}},{"id":"parse_params(params:Hash)-class-method","html_id":"parse_params(params:Hash)-class-method","name":"parse_params","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"args_string":"(params : Hash)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L31","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/payload.cr#L31","def":{"name":"parse_params","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crest::Utils.flatten_params(params)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Request","path":"Crest/Request.html","kind":"class","full_name":"Crest::Request","name":"Request","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/request.cr","line_number":2,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[{"id":"execute(method,url,**args)-class-method","html_id":"execute(method,url,**args)-class-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"args_string":"(method, url, **args)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L26","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L26","def":{"name":"execute","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request = new(method, url, **args)\nif request.logging\n  request.logger.request(request)\nend\nrequest.execute\n"}}],"constructors":[{"id":"new(method:Symbol,url:String,*,headers={}ofString=>String,cookies={}ofString=>String,payload={}ofString=>String|String,params={}ofString=>String,max_redirects=10,**options)-class-method","html_id":"new(method:Symbol,url:String,*,headers={}ofString=&gt;String,cookies={}ofString=&gt;String,payload={}ofString=&gt;String|String,params={}ofString=&gt;String,max_redirects=10,**options)-class-method","name":"new","doc":"Crest::Request.execute(method: :post, url: \"http://example.com/user\", payload: {:age => 27}, params: {:name => \"Kurt\"})\nCrest::Request.execute(method: :post, url: \"http://example.com/user\", payload: {:age => 27}.to_json)\n\nMandatory parameters:\n* method\n* url\nOptional parameters:\n* :headers a hash containing the request headers\n* :cookies a hash containing the request cookies\n* :payload a hash containing query params or a raw string\n* :params a hash that represent query-string separated from the preceding part by a question mark (?)\n         a sequence of attributeâ€“value pairs separated by a delimiter (&).\n* :user and :password for basic auth\n* :p_addr, :p_port, :p_user, :p_pass for proxy\n* :max_redirects maximum number of redirections (default to 10)\n* :logging enable logging (default to `false`)\n* :logger set logger (default to `Crest::CommonLogger`)\n","summary":"<p>Crest::Request.execute(method: :post, url: \"http://example.com/user\", payload: {:age => 27}, params: {:name => \"Kurt\"}) Crest::Request.execute(method: :post, url: \"http://example.com/user\", payload: {:age => 27}.to_json)</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"cookies","doc":null,"default_value":"{} of String => String","external_name":"cookies","restriction":""},{"name":"payload","doc":null,"default_value":"{} of String => String | String","external_name":"payload","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""},{"name":"max_redirects","doc":null,"default_value":"10","external_name":"max_redirects","restriction":""}],"args_string":"(method : Symbol, url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, cookies = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, payload = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, max_redirects = <span class=\"n\">10</span>, **options)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L50","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L50","def":{"name":"new","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"cookies","doc":null,"default_value":"{} of String => String","external_name":"cookies","restriction":""},{"name":"payload","doc":null,"default_value":"{} of String => String | String","external_name":"payload","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""},{"name":"max_redirects","doc":null,"default_value":"10","external_name":"max_redirects","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(method, url, **options, headers: headers, cookies: cookies, payload: payload, params: params, max_redirects: max_redirects)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cookies:HTTP::Cookies-instance-method","html_id":"cookies:HTTP::Cookies-instance-method","name":"cookies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Cookies","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"cookies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cookies"}},{"id":"execute:Crest::Response-instance-method","html_id":"execute:Crest::Response-instance-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Response","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L93","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L93","def":{"name":"execute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"uri = URI.parse(url)\nclient = HTTP::Client.new(uri)\nclient.set_proxy(@proxy)\nresponse = client.exec(method, url, body: payload, headers: headers)\nprocess_result(response)\n"}},{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers"}},{"id":"logger:Crest::Logger-instance-method","html_id":"logger:Crest::Logger-instance-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Logger","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger"}},{"id":"logging:Bool-instance-method","html_id":"logging:Bool-instance-method","name":"logging","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"logging","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logging"}},{"id":"max_redirects:Int32-instance-method","html_id":"max_redirects:Int32-instance-method","name":"max_redirects","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"max_redirects","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_redirects"}},{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@method"}},{"id":"p_addr:String?-instance-method","html_id":"p_addr:String?-instance-method","name":"p_addr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"p_addr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_addr"}},{"id":"p_pass:String?-instance-method","html_id":"p_pass:String?-instance-method","name":"p_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"p_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_pass"}},{"id":"p_port:Int32?-instance-method","html_id":"p_port:Int32?-instance-method","name":"p_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"p_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_port"}},{"id":"p_user:String?-instance-method","html_id":"p_user:String?-instance-method","name":"p_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"p_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_user"}},{"id":"password:String?-instance-method","html_id":"password:String?-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password"}},{"id":"payload:String?-instance-method","html_id":"payload:String?-instance-method","name":"payload","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"payload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@payload"}},{"id":"proxy:HTTP::Proxy::Client?-instance-method","html_id":"proxy:HTTP::Proxy::Client?-instance-method","name":"proxy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Proxy::Client?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"proxy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy"}},{"id":"redirection_history:Array(Crest::Response)-instance-method","html_id":"redirection_history:Array(Crest::Response)-instance-method","name":"redirection_history","doc":"An array of previous redirection responses","summary":"<p>An array of previous redirection responses</p>","abstract":false,"args":[],"args_string":" : Array(Crest::Response)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L24","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L24","def":{"name":"redirection_history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redirection_history"}},{"id":"redirection_history=(redirection_history)-instance-method","html_id":"redirection_history=(redirection_history)-instance-method","name":"redirection_history=","doc":"An array of previous redirection responses","summary":"<p>An array of previous redirection responses</p>","abstract":false,"args":[{"name":"redirection_history","doc":null,"default_value":"","external_name":"redirection_history","restriction":""}],"args_string":"(redirection_history)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L24","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L24","def":{"name":"redirection_history=","args":[{"name":"redirection_history","doc":null,"default_value":"","external_name":"redirection_history","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redirection_history = redirection_history"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"user:String?-instance-method","html_id":"user:String?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/request.cr#L20","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/RequestFailed","path":"Crest/RequestFailed.html","kind":"class","full_name":"Crest::RequestFailed","name":"RequestFailed","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Crest/Exception","kind":"class","full_name":"Crest::Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Crest/Exception","kind":"class","full_name":"Crest::Exception","name":"Exception"},{"html_id":"github.com/mamantoha/crest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/exceptions.cr","line_number":135,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"The request failed with an error code not managed by the code","summary":"<p>The request failed with an error code not managed by the code</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"default_message-instance-method","html_id":"default_message-instance-method","name":"default_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L136","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L136","def":{"name":"default_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"HTTP status code #{http_code}\""}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L140","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/exceptions.cr#L140","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"message"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Resource","path":"Crest/Resource.html","kind":"class","full_name":"Crest::Resource","name":"Resource","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/resource.cr","line_number":2,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(url:String,*,headers={}ofString=>String,params={}ofString=>String,**args)-class-method","html_id":"new(url:String,*,headers={}ofString=&gt;String,params={}ofString=&gt;String,**args)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, **args)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L8","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L8","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, **args, headers: headers, params: params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](suburl)-instance-method","html_id":"[](suburl)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":""}],"args_string":"(suburl)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L32","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L32","def":{"name":"[]","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(concat_urls(url, suburl), headers: headers)"}},{"id":"delete(additional_headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"delete(additional_headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(additional_headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L16","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L16","def":{"name":"delete","args":[{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = (@headers || ({} of String => String)).merge(additional_headers)\nRequest.execute(method: :delete, url: url, headers: headers, params: params, user: user, password: password)\n"}},{"id":"get(additional_headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"get(additional_headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(additional_headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L16","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L16","def":{"name":"get","args":[{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = (@headers || ({} of String => String)).merge(additional_headers)\nRequest.execute(method: :get, url: url, headers: headers, params: params, user: user, password: password)\n"}},{"id":"headers:Hash(String,String)-instance-method","html_id":"headers:Hash(String,String)-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers"}},{"id":"params:Hash(String,String)-instance-method","html_id":"params:Hash(String,String)-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}},{"id":"password:String?-instance-method","html_id":"password:String?-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password"}},{"id":"patch(payload={}ofString=>String,additional_headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"patch(payload={}ofString=&gt;String,additional_headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"patch","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"{} of String => String","external_name":"payload","restriction":""},{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(payload = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, additional_headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L24","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L24","def":{"name":"patch","args":[{"name":"payload","doc":null,"default_value":"{} of String => String","external_name":"payload","restriction":""},{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = (@headers || ({} of String => String)).merge(additional_headers)\nRequest.execute(method: :patch, url: url, headers: headers, payload: payload, params: params, user: user, password: password)\n"}},{"id":"post(payload={}ofString=>String,additional_headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"post(payload={}ofString=&gt;String,additional_headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"post","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"{} of String => String","external_name":"payload","restriction":""},{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(payload = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, additional_headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L24","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L24","def":{"name":"post","args":[{"name":"payload","doc":null,"default_value":"{} of String => String","external_name":"payload","restriction":""},{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = (@headers || ({} of String => String)).merge(additional_headers)\nRequest.execute(method: :post, url: url, headers: headers, payload: payload, params: params, user: user, password: password)\n"}},{"id":"put(payload={}ofString=>String,additional_headers={}ofString=>String,params={}ofString=>String)-instance-method","html_id":"put(payload={}ofString=&gt;String,additional_headers={}ofString=&gt;String,params={}ofString=&gt;String)-instance-method","name":"put","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"{} of String => String","external_name":"payload","restriction":""},{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(payload = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, additional_headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L24","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L24","def":{"name":"put","args":[{"name":"payload","doc":null,"default_value":"{} of String => String","external_name":"payload","restriction":""},{"name":"additional_headers","doc":null,"default_value":"{} of String => String","external_name":"additional_headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = (@headers || ({} of String => String)).merge(additional_headers)\nRequest.execute(method: :put, url: url, headers: headers, payload: payload, params: params, user: user, password: password)\n"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"user:String?-instance-method","html_id":"user:String?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/resource.cr#L6","def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Response","path":"Crest/Response.html","kind":"class","full_name":"Crest::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crest/response.cr","line_number":2,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[{"id":"create(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","html_id":"create(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(http_client_res : HTTP::Client::Response, request : Crest::Request)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L5","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L5","def":{"name":"create","args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.new(http_client_res, request)"}}],"constructors":[{"id":"new(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","html_id":"new(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(http_client_res : HTTP::Client::Response, request : Crest::Request)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L9","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L9","def":{"name":"new","args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(http_client_res, request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body-instance-method","html_id":"body-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L71","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L71","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client_res.body"}},{"id":"cookies-instance-method","html_id":"cookies-instance-method","name":"cookies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L80","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L80","def":{"name":"cookies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request_cookies.merge(response_cookies)"}},{"id":"follow_redirection-instance-method","html_id":"follow_redirection-instance-method","name":"follow_redirection","doc":"Follow a redirection response by making a new HTTP request to the\nredirection target.\n","summary":"<p>Follow a redirection response by making a new HTTP request to the redirection target.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L27","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L27","def":{"name":"follow_redirection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"url = @http_client_res.headers[\"Location\"]\nif url.starts_with?(\"http\")\nelse\n  uri = URI.parse(@request.url)\n  port = uri.port ? \":#{uri.port}\" : \"\"\n  url = \"#{uri.scheme}://#{uri.host}#{port}#{url}\"\nend\nmax_redirects = @request.max_redirects - 1\nnew_request = Request.new(method: :get, url: url, headers: headers, max_redirects: max_redirects, cookies: cookies, logging: @request.logging, logger: @request.logger, p_addr: @request.p_addr, p_port: @request.p_port, p_user: @request.p_user, p_pass: @request.p_pass)\nnew_request.redirection_history = history + [self]\nnew_request.execute\n"}},{"id":"headers-instance-method","html_id":"headers-instance-method","name":"headers","doc":"A hash of the headers.","summary":"<p>A hash of the headers.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L76","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L76","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request.headers.to_h"}},{"id":"history:Array-instance-method","html_id":"history:Array-instance-method","name":"history","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L84","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L84","def":{"name":"history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"@request.redirection_history || ([] of self)"}},{"id":"http_client_res:HTTP::Client::Response-instance-method","html_id":"http_client_res:HTTP::Client::Response-instance-method","name":"http_client_res","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client::Response","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L3","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L3","def":{"name":"http_client_res","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client_res"}},{"id":"request:Crest::Request-instance-method","html_id":"request:Crest::Request-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Request","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L3","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L3","def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request"}},{"id":"return!-instance-method","html_id":"return!-instance-method","name":"return!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L12","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L12","def":{"name":"return!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case status_code\nwhen 200..207\n  self\nwhen 301, 302, 303, 307\n  check_max_redirects\n  follow_redirection\nelse\n  raise(RequestFailed.new(self, status_code))\nend"}},{"id":"status_code:Int32-instance-method","html_id":"status_code:Int32-instance-method","name":"status_code","doc":"HTTP status code","summary":"<p>HTTP status code</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L67","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L67","def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@http_client_res.status_code.to_i"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L62","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/response.cr#L62","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@request.url"}}],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/TextValue","path":"Crest/TextValue.html","kind":"alias","full_name":"Crest::TextValue","name":"TextValue","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest.cr","line_number":8,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":true,"aliased":"(Int32 | String | Symbol | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/mamantoha/crest/Crest/Utils","path":"Crest/Utils.html","kind":"module","full_name":"Crest::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crest/utils.cr","line_number":3,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/mamantoha/crest/Crest/Utils","kind":"module","full_name":"Crest::Utils","name":"Utils"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"Various utility methods","summary":"<p>Various utility methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"encode_query_string(object:Hash)-instance-method","html_id":"encode_query_string(object:Hash)-instance-method","name":"encode_query_string","doc":"Serialize hash object into HTTP query string parameters\n\n>> encode_query_string({:foo => \"123\", :bar => 456})\n=> \"foo=123&bar=456\"\n","summary":"<p>Serialize hash object into HTTP query string parameters</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"}],"args_string":"(object : Hash)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr#L11","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr#L11","def":{"name":"encode_query_string","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(flatten_params(object)).map do |k, v|\n  v.nil? ? k : \"#{k}=#{v}\"\nend.join(\"&\")"}},{"id":"flatten_params(object:Hash,parent_key=nil)-instance-method","html_id":"flatten_params(object:Hash,parent_key=nil)-instance-method","name":"flatten_params","doc":"Transform deeply nested param containers into a flat hash of `key => value`.\n\n>> flatten_params({:key1 => {:key2 => \"123\"}})\n=> {\"key1[key2]\" => \"123\"}\n","summary":"<p>Transform deeply nested param containers into a flat hash of <code>key => value</code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"args_string":"(object : Hash, parent_key = <span class=\"n\">nil</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr#L20","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr#L20","def":{"name":"flatten_params","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"object.reduce({} of String => TextValue | File) do |memo, item|\n  k, v = item\n  processed_key = parent_key ? \"#{parent_key}[#{k}]\" : k.to_s\n  case v\n  when Hash, Array\n    memo.merge!(flatten_params(v, processed_key))\n  else\n    memo[processed_key] = v\n  end\n  memo\nend"}},{"id":"flatten_params(object:Array,parent_key=nil)-instance-method","html_id":"flatten_params(object:Array,parent_key=nil)-instance-method","name":"flatten_params","doc":">> flatten_params({:key1 => {:arr => [\"1\", \"2\", \"3\"]}})\n=> {\"key1[arr][]\" => \"1\", \"key1[arr][]\" => \"2\", \"key1[arr][]\" => \"3\"}\n","summary":"<blockquote>> flatten_params({:key1 => {:arr => [\"1\", \"2\", \"3\"]}}) => {\"key1[arr][]\" => \"1\", \"key1[arr][]\" => \"2\", \"key1[arr][]\" => \"3\"} </blockquote>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Array"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"args_string":"(object : Array, parent_key = <span class=\"n\">nil</span>)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr#L40","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/crest/utils.cr#L40","def":{"name":"flatten_params","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Array"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"object.reduce({} of String => TextValue | File) do |memo, item|\n  k = :\n  v = item\n  processed_key = parent_key ? \"#{parent_key}[#{k}]\" : k.to_s\n  memo[processed_key] = v\n  memo\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/mamantoha/crest/HTTP","path":"HTTP.html","kind":"module","full_name":"HTTP","name":"HTTP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"http/proxy/client.cr","line_number":9,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/http/proxy/client.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The HTTP module contains `HTTP::Client`, `HTTP::Server` and `HTTP::WebSocket` implementations.","summary":"<p>The HTTP module contains <code><a href=\"HTTP/Client.html\">HTTP::Client</a></code>, <code>HTTP::Server</code> and <code>HTTP::WebSocket</code> implementations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mamantoha/crest/HTTP/Client","path":"HTTP/Client.html","kind":"class","full_name":"HTTP::Client","name":"Client","abstract":false,"superclass":{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mamantoha/crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mamantoha/crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"http/proxy/client.cr","line_number":104,"url":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/http/proxy/client.cr"}],"repository_name":"github.com/mamantoha/crest","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mamantoha/crest/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"An HTTP Client.\n\n### One-shot usage\n\nWithout a block, an `HTTP::Client::Response` is returned and the response's body\nis available as a `String` by invoking `HTTP::Client::Response#body`.\n\n```\nrequire \"http/client\"\n\nresponse = HTTP::Client.get \"http://www.example.com\"\nresponse.status_code      # => 200\nresponse.body.lines.first # => \"<!doctype html>\"\n```\n\n### Streaming\n\nWith a block, an `HTTP::Client::Response` body is returned and the response's body\nis available as an `IO` by invoking `HTTP::Client::Response#body_io`.\n\n```\nrequire \"http/client\"\n\nHTTP::Client.get(\"http://www.example.com\") do |response|\n  response.status_code  # => 200\n  response.body_io.gets # => \"<!doctype html>\"\nend\n```\n\n### Reusing a connection\n\nSimilar to the above cases, but creating an instance of an `HTTP::Client`.\n\n```\nrequire \"http/client\"\n\nclient = HTTP::Client.new \"www.example.com\"\nresponse = client.get \"/\"\nresponse.status_code      # => 200\nresponse.body.lines.first # => \"<!doctype html>\"\nclient.close\n```\n\n### Compression\n\nIf `compress` isn't set to `false`, and no `Accept-Encoding` header is explicitly specified,\nan HTTP::Client will add an `\"Accept-Encoding\": \"gzip, deflate\"` header, and automatically decompress\nthe response body/body_io.\n\n### Encoding\n\nIf a response has a `Content-Type` header with a charset, that charset is set as the encoding\nof the returned IO (or used for creating a String for the body). Invalid bytes in the given encoding\nare silently ignored when reading text content.","summary":"<p>An HTTP Client.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"proxy_connection_options-instance-method","html_id":"proxy_connection_options-instance-method","name":"proxy_connection_options","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/http/proxy/client.cr#L121","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/http/proxy/client.cr#L121","def":{"name":"proxy_connection_options","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"opts = {} of Symbol => Float64 | Nil\nopts[:dns_timeout] = @dns_timeout\nopts[:connect_timeout] = @connect_timeout\nopts[:read_timeout] = @read_timeout\nreturn opts\n"}},{"id":"set_proxy(proxy:HTTP::Proxy::Client?)-instance-method","html_id":"set_proxy(proxy:HTTP::Proxy::Client?)-instance-method","name":"set_proxy","doc":null,"summary":null,"abstract":false,"args":[{"name":"proxy","doc":null,"default_value":"","external_name":"proxy","restriction":"HTTP::Proxy::Client | ::Nil"}],"args_string":"(proxy : HTTP::Proxy::Client?)","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/http/proxy/client.cr#L105","source_link":"https://github.com/mamantoha/crest/blob/2da09f70a77982623047e203e1676a70dca430f3/src/http/proxy/client.cr#L105","def":{"name":"set_proxy","args":[{"name":"proxy","doc":null,"default_value":"","external_name":"proxy","restriction":"HTTP::Proxy::Client | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if proxy\nelse\n  return\nend\nbegin\n  @socket = proxy.open(host: @host, port: @port, tls: @tls, connection_options: proxy_connection_options)\n  if proxy.username\n    proxy_basic_auth(proxy.username, proxy.password)\n  end\nrescue IO::Error\n  @socket = nil\nend\n@socket\n"}}],"macros":[],"types":[]}]}]}}